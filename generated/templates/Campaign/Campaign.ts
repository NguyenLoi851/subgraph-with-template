// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class MultipleCampaign extends ethereum.Event {
  get params(): MultipleCampaign__Params {
    return new MultipleCampaign__Params(this);
  }
}

export class MultipleCampaign__Params {
  _event: MultipleCampaign;

  constructor(event: MultipleCampaign) {
    this._event = event;
  }

  get aNumber(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get kNumber(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get resNumber(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Campaign extends ethereum.SmartContract {
  static bind(address: Address): Campaign {
    return new Campaign("Campaign", address);
  }

  a(): BigInt {
    let result = super.call("a", "a():(uint256)", []);

    return result[0].toBigInt();
  }

  try_a(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("a", "a():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  b(): Address {
    let result = super.call("b", "b():(address)", []);

    return result[0].toAddress();
  }

  try_b(): ethereum.CallResult<Address> {
    let result = super.tryCall("b", "b():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  multiple(_k: BigInt): BigInt {
    let result = super.call("multiple", "multiple(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_k)
    ]);

    return result[0].toBigInt();
  }

  try_multiple(_k: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("multiple", "multiple(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_k)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _a(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _b(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class MultipleCall extends ethereum.Call {
  get inputs(): MultipleCall__Inputs {
    return new MultipleCall__Inputs(this);
  }

  get outputs(): MultipleCall__Outputs {
    return new MultipleCall__Outputs(this);
  }
}

export class MultipleCall__Inputs {
  _call: MultipleCall;

  constructor(call: MultipleCall) {
    this._call = call;
  }

  get _k(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class MultipleCall__Outputs {
  _call: MultipleCall;

  constructor(call: MultipleCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}
